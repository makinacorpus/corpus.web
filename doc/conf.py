# -*- coding: utf-8 -*-
#
# corpus.web documentation build configuration file, created by
# sphinx-quickstart on Wed Feb 12 00:59:39 2014.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys, os


class Mock(object):

    __all__ = []

    def __init__(self, *args, **kwargs):
        pass

    def __call__(self, *args, **kwargs):
        return Mock()

    @classmethod
    def __getattr__(cls, name):
        if name in ('__file__', '__path__'):
            return '/dev/null'
        elif name[0] == name[0].upper():
            mockType = type(name, (), {})
            mockType.__module__ = __name__
            return mockType
        else:
            return Mock()


MOCK_MODULES = [
    'Crypto',
    'Crypto.Cipher',
    'Crypto.Hash',
    'Crypto.PublicKey',
    'Crypto.Random',
    'M2Crypto',
    'msgpack',
    'yaml',
    'yaml.constructor',
    'yaml.nodes',
    'yaml.scanner',
    'zmq',
    # salt.cloud
    'libcloud',
    'libcloud.compute',
    'libcloud.compute.base',
    'libcloud.compute.deployment',
    'libcloud.compute.providers',
    'libcloud.compute.types',
    # modules, renderers, states, returners, et al
    'django',
    'libvirt',
    'mako',
    'mako.template',
    'MySQLdb',
    'MySQLdb.cursors',
    'psutil',
    'pycassa',
    'pymongo',
    'rabbitmq_server',
    'redis',
    'rpm',
    'rpmUtils',
    'rpmUtils.arch',
    'yum',
    'OpenSSL',
    'zfs'
    # cd src/salt/ && find salt -name "*py"|sed -re s:/__init__.py::g -e s:/:.:g -e s:.py$::g|sort -u >>../../doc/conf.py && cd -
    'salt',
    'salt.auth',
    'salt.auth.auto',
    'salt.auth.keystone',
    'salt.auth.ldap',
    'salt.auth.pam',
    'salt.auth.pki',
    'salt.auth.stormpath_mod',
    'salt.cli',
    'salt.cli.batch',
    'salt.cli.caller',
    'salt.cli.cp',
    'salt.client',
    'salt.client.api',
    'salt.client.ssh',
    'salt.client.ssh.shell',
    'salt.client.ssh.state',
    'salt.client.ssh.wrapper',
    'salt.client.ssh.wrapper.config',
    'salt.client.ssh.wrapper.grains',
    'salt.client.ssh.wrapper.pillar',
    'salt.client.ssh.wrapper.state',
    'salt.cloud',
    'salt.cloud.cli',
    'salt.cloud.clouds',
    'salt.cloud.clouds.botocore_aws',
    'salt.cloud.clouds.cloudstack',
    'salt.cloud.clouds.digital_ocean',
    'salt.cloud.clouds.ec2',
    'salt.cloud.clouds.gce',
    'salt.cloud.clouds.gogrid',
    'salt.cloud.clouds.ibmsce',
    'salt.cloud.clouds.joyent',
    'salt.cloud.clouds.libcloud_aws',
    'salt.cloud.clouds.linode',
    'salt.cloud.clouds.msazure',
    'salt.cloud.clouds.nova',
    'salt.cloud.clouds.openstack',
    'salt.cloud.clouds.parallels',
    'salt.cloud.clouds.rackspace',
    'salt.cloud.clouds.saltify',
    'salt.cloud.clouds.softlayer',
    'salt.cloud.clouds.softlayer-hw',
    'salt.cloud.exceptions',
    'salt.cloud.libcloudfuncs',
    'salt._compat',
    'salt.config',
    'salt.crypt',
    'salt.daemons',
    'salt.daemons.ioflo',
    'salt.daemons.ioflo.master',
    'salt.daemons.ioflo.minion',
    'salt.daemons.masterapi',
    'salt.exceptions',
    'salt.ext',
    'salt.fileclient',
    'salt.fileserver',
    'salt.fileserver.gitfs',
    'salt.fileserver.hgfs',
    'salt.fileserver.minionfs',
    'salt.fileserver.roots',
    'salt.fileserver.s3fs',
    'salt.fileserver.svnfs',
    'salt.grains',
    'salt.grains.core',
    'salt.grains.external_ip',
    'salt.grains.extra',
    'salt.grains.junos',
    'salt.grains.opts',
    'salt.grains.rest_sample',
    'salt.key',
    'salt.loader',
    'salt.log',
    'salt.log.handlers',
    'salt.log.handlers.logstash_mod',
    'salt.log.handlers.sentry_mod',
    'salt.log.mixins',
    'salt.log.setup',
    'salt.master',
    'salt.minion',
    'salt.modules',
    'salt.modules.aliases',
    'salt.modules.alternatives',
    'salt.modules.apache',
    'salt.modules.aptpkg',
    'salt.modules.archive',
    'salt.modules.at',
    'salt.modules.augeas_cfg',
    'salt.modules.aws_sqs',
    'salt.modules.bluez',
    'salt.modules.brew',
    'salt.modules.bridge',
    'salt.modules.bsd_shadow',
    'salt.modules.cassandra',
    'salt.modules.chocolatey',
    'salt.modules.cloud',
    'salt.modules.cmdmod',
    'salt.modules.composer',
    'salt.modules.config',
    'salt.modules.cp',
    'salt.modules.cron',
    'salt.modules.daemontools',
    'salt.modules.darwin_sysctl',
    'salt.modules.data',
    'salt.modules.ddns',
    'salt.modules.debconfmod',
    'salt.modules.debian_ip',
    'salt.modules.debian_service',
    'salt.modules.defaults',
    'salt.modules.dig',
    'salt.modules.disk',
    'salt.modules.djangomod',
    'salt.modules.dnsmasq',
    'salt.modules.dnsutil',
    'salt.modules.dockerio',
    'salt.modules.dpkg',
    'salt.modules.ebuild',
    'salt.modules.eix',
    'salt.modules.eselect',
    'salt.modules.event',
    'salt.modules.extfs',
    'salt.modules.file',
    'salt.modules.freebsdjail',
    'salt.modules.freebsdkmod',
    'salt.modules.freebsdpkg',
    'salt.modules.freebsdports',
    'salt.modules.freebsdservice',
    'salt.modules.freebsd_sysctl',
    'salt.modules.gem',
    'salt.modules.gentoolkitmod',
    'salt.modules.gentoo_service',
    'salt.modules.git',
    'salt.modules.glance',
    'salt.modules.gnomedesktop',
    'salt.modules.grains',
    'salt.modules.groupadd',
    'salt.modules.grub_legacy',
    'salt.modules.guestfs',
    'salt.modules.hadoop',
    'salt.modules.hg',
    'salt.modules.hosts',
    'salt.modules.htpasswd',
    'salt.modules.img',
    'salt.modules.incron',
    'salt.modules.ini_manage',
    'salt.modules.iptables',
    'salt.modules.junos',
    'salt.modules.key',
    'salt.modules.keyboard',
    'salt.modules.keystone',
    'salt.modules.kmod',
    'salt.modules.launchctl',
    'salt.modules.layman',
    'salt.modules.ldapmod',
    'salt.modules.linux_acl',
    'salt.modules.linux_lvm',
    'salt.modules.linux_sysctl',
    'salt.modules.localemod',
    'salt.modules.locate',
    'salt.modules.logrotate',
    'salt.modules.lvs',
    'salt.modules.lxc',
    'salt.modules.mac_group',
    'salt.modules.mac_user',
    'salt.modules.makeconf',
    'salt.modules.match',
    'salt.modules.mdadm',
    'salt.modules.memcached',
    'salt.modules.mine',
    'salt.modules.modjk',
    'salt.modules.mongodb',
    'salt.modules.monit',
    'salt.modules.moosefs',
    'salt.modules.mount',
    'salt.modules.munin',
    'salt.modules.mysql',
    'salt.modules.netbsdservice',
    'salt.modules.netbsd_sysctl',
    'salt.modules.network',
    'salt.modules.nfs3',
    'salt.modules.nginx',
    'salt.modules.nova',
    'salt.modules.npm',
    'salt.modules.omapi',
    'salt.modules.openbsdpkg',
    'salt.modules.openbsdservice',
    'salt.modules.openstack_config',
    'salt.modules.osxdesktop',
    'salt.modules.pacman',
    'salt.modules.pagerduty',
    'salt.modules.pam',
    'salt.modules.parted',
    'salt.modules.pecl',
    'salt.modules.pillar',
    'salt.modules.pip',
    'salt.modules.pkgin',
    'salt.modules.pkgng',
    'salt.modules.pkg_resource',
    'salt.modules.pkgutil',
    'salt.modules.portage_config',
    'salt.modules.postgres',
    'salt.modules.poudriere',
    'salt.modules.powerpath',
    'salt.modules.ps',
    'salt.modules.publish',
    'salt.modules.puppet',
    'salt.modules.pw_group',
    'salt.modules.pw_user',
    'salt.modules.qemu_img',
    'salt.modules.qemu_nbd',
    'salt.modules.quota',
    'salt.modules.rabbitmq',
    'salt.modules.rbenv',
    'salt.modules.rdp',
    'salt.modules.reg',
    'salt.modules.rest_package',
    'salt.modules.rest_sample',
    'salt.modules.rest_service',
    'salt.modules.ret',
    'salt.modules.rh_ip',
    'salt.modules.rh_service',
    'salt.modules.riak',
    'salt.modules.rpm',
    'salt.modules.rsync',
    'salt.modules.rvm',
    'salt.modules.s3',
    'salt.modules.saltcloudmod',
    'salt.modules.saltutil',
    'salt.modules.seed',
    'salt.modules.selinux',
    'salt.modules.service',
    'salt.modules.shadow',
    'salt.modules.smartos_imgadm',
    'salt.modules.smartos_vmadm',
    'salt.modules.smf',
    'salt.modules.solaris_group',
    'salt.modules.solarispkg',
    'salt.modules.solaris_shadow',
    'salt.modules.solaris_user',
    'salt.modules.solr',
    'salt.modules.sqlite3',
    'salt.modules.ssh',
    'salt.modules.state',
    'salt.modules.status',
    'salt.modules.supervisord',
    'salt.modules.svn',
    'salt.modules.sysbench',
    'salt.modules.sysmod',
    'salt.modules.system',
    'salt.modules.systemd',
    'salt.modules.test',
    'salt.modules.timezone',
    'salt.modules.tls',
    'salt.modules.tomcat',
    'salt.modules.upstart',
    'salt.modules.useradd',
    'salt.modules.uwsgi',
    'salt.modules.virt',
    'salt.modules.virtualenv_mod',
    'salt.modules.win_autoruns',
    'salt.modules.win_disk',
    'salt.modules.win_dns_client',
    'salt.modules.win_file',
    'salt.modules.win_firewall',
    'salt.modules.win_groupadd',
    'salt.modules.win_ip',
    'salt.modules.win_network',
    'salt.modules.win_ntp',
    'salt.modules.win_path',
    'salt.modules.win_pkg',
    'salt.modules.win_repo',
    'salt.modules.win_servermanager',
    'salt.modules.win_service',
    'salt.modules.win_shadow',
    'salt.modules.win_status',
    'salt.modules.win_system',
    'salt.modules.win_timezone',
    'salt.modules.win_useradd',
    'salt.modules.xapi',
    'salt.modules.xmpp',
    'salt.modules.yumpkg',
    'salt.modules.zcbuildout',
    'salt.modules.zfs',
    'salt.modules.zpool',
    'salt.modules.zypper',
    'salt.output',
    'salt.output.grains',
    'salt.output.highstate',
    'salt.output.json_out',
    'salt.output.key',
    'salt.output.nested',
    'salt.output.no_out',
    'salt.output.no_return',
    'salt.output.overstatestage',
    'salt.output.pprint_out',
    'salt.output.raw',
    'salt.output.txt',
    'salt.output.virt_query',
    'salt.output.yaml_out',
    'salt.overstate',
    'salt.payload',
    'salt.pillar',
    'salt.pillar.cmd_json',
    'salt.pillar.cmd_yaml',
    'salt.pillar.cobbler',
    'salt.pillar.django_orm',
    'salt.pillar.git_pillar',
    'salt.pillar.hiera',
    'salt.pillar.libvirt',
    'salt.pillar.mongo',
    'salt.pillar.mysql',
    'salt.pillar.pillar_ldap',
    'salt.pillar.puppet',
    'salt.pillar.reclass_adapter',
    'salt.pillar.virtkey',
    'salt.proxy',
    'salt.proxy.junos',
    'salt.proxy.rest_sample',
    'salt.renderers',
    'salt.renderers.jinja',
    'salt.renderers.json',
    'salt.renderers.mako',
    'salt.renderers.py',
    'salt.renderers.pydsl',
    'salt.renderers.stateconf',
    'salt.renderers.wempy',
    'salt.renderers.yaml',
    'salt.returners',
    'salt.returners.carbon_return',
    'salt.returners.cassandra_return',
    'salt.returners.couchdb_return',
    'salt.returners.local',
    'salt.returners.memcache_return',
    'salt.returners.mongo_future_return',
    'salt.returners.mongo_return',
    'salt.returners.mysql',
    'salt.returners.postgres',
    'salt.returners.redis_return',
    'salt.returners.sentry_return',
    'salt.returners.smtp_return',
    'salt.returners.sqlite3_return',
    'salt.returners.syslog_return',
    'salt.roster',
    'salt.roster.flat',
    'salt.roster.scan',
    'salt.runner',
    'salt.runners',
    'salt.runners.cache',
    'salt.runners.cloud',
    'salt.runners.doc',
    'salt.runners.error',
    'salt.runners.fileserver',
    'salt.runners.git_pillar',
    'salt.runners.jobs',
    'salt.runners.launchd',
    'salt.runners.lxc',
    'salt.runners.manage',
    'salt.runners.mine',
    'salt.runners.network',
    'salt.runners.pillar',
    'salt.runners.search',
    'salt.runners.state',
    'salt.runners.thin',
    'salt.runners.virt',
    'salt.runners.winrepo',
    'salt.scripts',
    'salt.search',
    'salt.search.whoosh_search',
    'salt.state',
    'salt.states',
    'salt.states.alias',
    'salt.states.alternatives',
    'salt.states.apt',
    'salt.states.archive',
    'salt.states.at',
    'salt.states.augeas',
    'salt.states.aws_sqs',
    'salt.states.cloud',
    'salt.states.cmd',
    'salt.states.composer',
    'salt.states.cron',
    'salt.states.ddns',
    'salt.states.debconfmod',
    'salt.states.disk',
    'salt.states.dockerio',
    'salt.states.eselect',
    'salt.states.file',
    'salt.states.gem',
    'salt.states.git',
    'salt.states.gnomedesktop',
    'salt.states.grains',
    'salt.states.group',
    'salt.states.hg',
    'salt.states.host',
    'salt.states.incron',
    'salt.states.ini_manage',
    'salt.states.iptables',
    'salt.states.keyboard',
    'salt.states.keystone',
    'salt.states.kmod',
    'salt.states.layman',
    'salt.states.libvirt',
    'salt.states.locale',
    'salt.states.lvm',
    'salt.states.lvs_server',
    'salt.states.lvs_service',
    'salt.states.makeconf',
    'salt.states.mdadm',
    'salt.states.memcached',
    'salt.states.modjk',
    'salt.states.modjk_worker',
    'salt.states.module',
    'salt.states.mongodb_database',
    'salt.states.mongodb_user',
    'salt.states.mount',
    'salt.states.mysql_database',
    'salt.states.mysql_grants',
    'salt.states.mysql_user',
    'salt.states.network',
    'salt.states.npm',
    'salt.states.ntp',
    'salt.states.openstack_config',
    'salt.states.pagerduty',
    'salt.states.pecl',
    'salt.states.pip_state',
    'salt.states.pkg',
    'salt.states.pkgng',
    'salt.states.pkgrepo',
    'salt.states.portage_config',
    'salt.states.ports',
    'salt.states.postgres_database',
    'salt.states.postgres_extension',
    'salt.states.postgres_group',
    'salt.states.postgres_user',
    'salt.states.powerpath',
    'salt.states.process',
    'salt.states.quota',
    'salt.states.rabbitmq_cluster',
    'salt.states.rabbitmq_plugin',
    'salt.states.rabbitmq_policy',
    'salt.states.rabbitmq_user',
    'salt.states.rabbitmq_vhost',
    'salt.states.rbenv',
    'salt.states.rdp',
    'salt.states.reg',
    'salt.states.rvm',
    'salt.states.saltmod',
    'salt.states.selinux',
    'salt.states.service',
    'salt.states.ssh_auth',
    'salt.states.ssh_known_hosts',
    'salt.states.stateconf',
    'salt.states.status',
    'salt.states.supervisord',
    'salt.states.svn',
    'salt.states.sysctl',
    'salt.states.timezone',
    'salt.states.tomcat',
    'salt.states.user',
    'salt.states.virtualenv_mod',
    'salt.states.win_dns_client',
    'salt.states.win_firewall',
    'salt.states.win_network',
    'salt.states.win_path',
    'salt.states.win_servermanager',
    'salt.states.win_system',
    'salt.states.xmpp',
    'salt.states.zcbuildout',
    'salt.syspaths',
    'salt.template',
    'salt.tops',
    'salt.tops.cobbler',
    'salt.tops.ext_nodes',
    'salt.tops.mongo',
    'salt.tops.reclass_adapter',
    'salt.transport',
    'salt.transport.road',
    'salt.transport.road.raet',
    'salt.transport.road.raet.behaving',
    'salt.transport.road.raet.packeting',
    'salt.transport.road.raet.raeting',
    'salt.transport.road.raet.stacking',
    'salt.transport.road.testrun',
    'salt.transport.table',
    'salt.transport.table.handshake',
    'salt.transport.table.handshake.raet_curvecp',
    'salt.transport.table.public',
    'salt.transport.table.public.pycrypto_rsa',
    'salt.transport.table.public.pynacl',
    'salt.transport.table.secret',
    'salt.transport.table.secret.pycrypto_aes',
    'salt.transport.table.secret.pynacl',
    'salt.transport.table.test',
    'salt.transport.table.test.test_table',
    'salt.utils',
    'salt.utils.atomicfile',
    'salt.utils.cloud',
    'salt.utils.context',
    'salt.utils.debug',
    'salt.utils.decorators',
    'salt.utils.dictupdate',
    'salt.utils.doc',
    'salt.utils.error',
    'salt.utils.event',
    'salt.utils.filebuffer',
    'salt.utils.find',
    'salt.utils.gzip_util',
    'salt.utils.ipaddr',
    'salt.utils.jinja',
    'salt.utils.mako',
    'salt.utils.master',
    'salt.utils.migrations',
    'salt.utils.minions',
    'salt.utils.nb_popen',
    'salt.utils.network',
    'salt.utils.odict',
    'salt.utils.parsers',
    'salt.utils.process',
    'salt.utils.pydsl',
    'salt.utils.reclass',
    'salt.utils.s3',
    'salt.utils.saltminionservice',
    'salt.utils.schedule',
    'salt.utils.templates',
    'salt.utils.thin',
    'salt.utils.timed_subprocess',
    'salt.utils.validate',
    'salt.utils.validate.net',
    'salt.utils.validate.path',
    'salt.utils.validate.ssh',
    'salt.utils.validate.user',
    'salt.utils.verify',
    'salt.utils.virt',
    'salt.utils.vt',
    'salt.utils.winapi',
    'salt.utils.winservice',
    'salt.utils.xmlutil',
    'salt.utils.yamlloader',
    'salt.version',
    'salt.wheel',
    'salt.wheel.config',
    'salt.wheel.error',
    'salt.wheel.file_roots',
    'salt.wheel.key',
    'salt.wheel.pillar_roots',
    'salt',
    'salt.states',
    'salt.modules',
    'salt.utils',
    'salt.exceptions',
    'salt.utils.dictupdate',
    'salt.loaders']
for mod_name in MOCK_MODULES:
    sys.modules[mod_name] = Mock()

# on_rtd is whether we are on readthedocs.org
on_rtd = os.environ.get('READTHEDOCS', None) == 'True'

# for automodules & rtd
D = os.path.abspath(os.path.dirname(__name__))
sys.path.insert(0, os.path.abspath(D + os.path.join('/..')))

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.doctest', 'sphinx.ext.todo']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'corpus.web'
copyright = u'2014, Mathieu Le Marec Pasquet, Régis Leroy & Makina Corpus folks'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '1.0'
# The full version, including alpha/beta/rc tags.
release = '1.0'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'default'
if not on_rtd:  # only import and set the theme if we're building docs locally
    import sphinx_rtd_theme
    html_theme = 'sphinx_rtd_theme'
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]



# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'CorpusWebdoc'


# -- Options for LaTeX output --------------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'CorpusWeb.tex', u'corpus.web Documentation',
   u'Mathieu Le Marec Pasquet, Régis Leroy \\& Makina Corpus folks', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'corpusweb', u'corpus.web Documentation',
     [u'Mathieu Le Marec Pasquet, Régis Leroy & Makina Corpus folks'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output ------------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'CorpusWeb', u'corpus.web Documentation',
   u'Mathieu Le Marec - Pasquet, Régis Leroy & Makina Corpus folks', 'MakinaStates', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False

